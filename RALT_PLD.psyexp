<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2022.2.4">
  <Settings>
    <Param val="use prefs" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="use prefs" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="{'participant': '', 'session': '001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="False" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="packaged" valType="str" updates="None" name="JS libs"/>
    <Param val="OfficeMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="['html/resources/Stimuli/social/happy/F01-Happy Women.mp4', 'html/resources/Stimuli/social/happy/M02-Happy Man.mp4', 'html/resources/Stimuli/social/angry/F04-Angry Women.mp4', 'html/resources/Stimuli/social/angry/M06-Angry Man.mp4', 'html/resources/Stimuli/nonsocial/Right Tick.mp4', 'html/resources/Stimuli/nonsocial/Wrong Tick.mp4', 'html/resources/Stimuli/neutral/Still.jpg', 'html/resources/trainingtrials_nonsocial.xlsx', 'html/resources/trainingtrials_social_prob.xlsx', 'html/resources/trainingtrials_social.xlsx']" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="False" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="False" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1920, 1080]" valType="code" updates="None" name="Window size (pixels)"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="$[-1,-1,-1]" valType="str" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="EmoSexCounterbalanced_fontfix" valType="str" updates="None" name="expName"/>
    <Param val="on Save" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="debug" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
  </Settings>
  <Routines>
    <Routine name="Thanks">
      <TextComponent name="Thank">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="code" updates="constant" name="letterHeight"/>
        <Param val="Thank" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Thank you for your participation!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="70" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="end">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="end" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Welcome">
      <CodeComponent name="code_JS">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="thisExp=psychoJS.experiment;&amp;#10;win=psychoJS.window;&amp;#10;event=psychoJS.eventManager;&amp;#10;win.color = &quot;black&quot;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_JS" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_5">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="//Function to randomly choose number from array&amp;#10;function randomChoice(arr) {&amp;#10;  return arr[Math.floor(Math.random() * arr.length)];&amp;#10;}&amp;#10;//shuffle function&amp;#10;function shuffle(array) {&amp;#10;    var currentIndex = array.length,  randomIndex;&amp;#10;  &amp;#10;    // While there remain elements to shuffle...&amp;#10;    while (currentIndex != 0) {&amp;#10;  &amp;#10;      // Pick a remaining element...&amp;#10;      randomIndex = Math.floor(Math.random() * currentIndex);&amp;#10;      currentIndex--;&amp;#10;  &amp;#10;      // And swap it with the current element.&amp;#10;      [array[currentIndex], array[randomIndex]] = [&amp;#10;        array[randomIndex], array[currentIndex]];&amp;#10;    }&amp;#10;  &amp;#10;    return array;&amp;#10;  }&amp;#10;&amp;#10;//Function to center text on screen (wrap width 70)&amp;#10;//Only works with monospaced fonts&amp;#10;function centerfy(string) {&amp;#10;var parts, max;&amp;#10;parts = string.split('\n'),&amp;#10;max = 30;&amp;#10;&amp;#10;parts = parts.map(s =&gt; s&amp;#10;    .padStart(s.length + Math.floor((max - s.length) / 2), ' ')&amp;#10;    .padEnd(max, ' ')&amp;#10;);&amp;#10;return parts.join('\n')&amp;#10;}" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="import openpyxl&amp;#10;import numpy&amp;#10;import random&amp;#10;from numpy.random import choice&amp;#10;&amp;#10;win.setColor('white')&amp;#10;font_choice = 'Menlo'&amp;#10;&amp;#10;#Shuffle correct category(left/right) and write to excel file&amp;#10;&amp;#10;cwd = os.getcwd()&amp;#10;&amp;#10;#Randomize block conditions xl file&amp;#10;'''&amp;#10;xlfile_cond = &quot;condBlocks.xlsx&quot;&amp;#10;path_cond = os.path.join(cwd, xlfile_cond)&amp;#10;&amp;#10;book_cond = openpyxl.load_workbook(filename = path_cond)&amp;#10;&amp;#10;sheet = book_cond.active&amp;#10;&amp;#10;list_to_shuffle_cond = ['social', 'nonsocial']&amp;#10;random.shuffle(list_to_shuffle_cond)&amp;#10;list_to_shuffle_cond = list_to_shuffle_cond + list_to_shuffle_cond&amp;#10;&amp;#10;for index, element in enumerate(list_to_shuffle_cond, start=1):&amp;#10;    sheet.cell(row = index + 1, column = 1).value = element&amp;#10;&amp;#10;book_cond.save(filename = &quot;condBlocks.xlsx&quot;)&amp;#10;'''&amp;#10;#Funktion zur Zentrierung des Textes&amp;#10;def centerfy(str1):&amp;#10;    str2 = str1.split('\n')&amp;#10;    str3 = ''&amp;#10;    for line in str2:&amp;#10;        str3 = str3 + '\n' + line.center(30)&amp;#10;    return str3&amp;#10;&amp;#10;&amp;#10;&amp;#10;#Zentrierter Text;&amp;#10;Welcome_heading = centerfy(&quot;Vielen Dank, dass Sie an diesem Experiment teilnehmen!&quot;)&amp;#10;&amp;#10;Welcome = centerfy(&quot;Sie werden im Folgenden gebeten,\n verschiedene Zahlen zuzuordnen.\n&quot;&amp;#10;'\n'&amp;#10;&quot;Sie können dies tun, indem Sie die Pfeiltasten &lt;- oder -&gt; drücken.\n&quot;&amp;#10;'\n'&amp;#10;&quot;Ob Sie richtig gewählt haben\n wird Ihnen durch Bilder angezeigt.\n&quot;&amp;#10;'\n'&amp;#10;&quot;Wir beginnen mit einigen Probedurchgängen, \n damit Sie das Experiment besser verstehen.\n\n&quot;&amp;#10;'Drücken Sie eine beliebige Taste, um fortzufahren!')&amp;#10;&amp;#10;instruction = centerfy(&quot;Sie werden nun gleich eine Zahl \n im unteren Bereich des Bildschirms sehen.&quot;&amp;#10;'\n\n'&amp;#10;'Ihre Aufgabe ist es, die Zahl mittels der Pfeiltasten \n entweder A oder B zuzuordnen.'&amp;#10;'\n\n'&amp;#10;'Die richtige Zuordnung ist völlig zufällig.\n'&amp;#10;'Sie müssen also zunächst einfach raten.'&amp;#10;'\n\n'&amp;#10;'Zusätzlich werden Sie über der Zahl ein Bild sehen,\n'&amp;#10;'in diesem Fall ein neutrales Gesicht.'&amp;#10;'\n\n'&amp;#10;'Ob Sie richtig gewählt haben, \n wird Ihnen durch eine Veränderung des Bildes angezeigt.'&amp;#10;'\n\n\n'&amp;#10;'Versuchen wir es mit einem ersten Durchgang!')&amp;#10;&amp;#10;if choice([True, False]):&amp;#10;    right_cat = &quot;A&quot;&amp;#10;    left_cat = &quot;B&quot;&amp;#10;else:&amp;#10;    left_cat = &quot;A&quot;&amp;#10;    right_cat = &quot;B&quot;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="var font_choice = 'Helvetica';&amp;#10;var color_choice = 'white';&amp;#10;&amp;#10;//Centered Text&amp;#10;&amp;#10;if (randomChoice([true, false])) {&amp;#10;    right_cat = &quot;A&quot;;&amp;#10;    left_cat = &quot;B&quot;;&amp;#10;} else {&amp;#10;    left_cat = &quot;A&quot;;&amp;#10;    right_cat = &quot;B&quot;;&amp;#10;}&amp;#10;window.Welcome_head = Welcome_head&amp;#10;window.Welcome_text = Welcome_text" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="Welcome_head.bold = true;&amp;#10;Welcome_head.setAlignHoriz('center')&amp;#10;Welcome_text.setAlignHoriz('center')&amp;#10;text_3.setAlignHoriz('center')&amp;#10;text_4.setAlignHoriz('center')&amp;#10;text.setAlignHoriz('center')&amp;#10;Allesklartext_2.setAlignHoriz('center')&amp;#10;Allesklartext.setAlignHoriz('center')" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="Welcome_head.bold = True&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="Welcome_head">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="code" updates="constant" name="letterHeight"/>
        <Param val="Welcome_head" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Thank you for participating in this experiment!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="70" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="Welcome_text">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="code" updates="constant" name="letterHeight"/>
        <Param val="Welcome_text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You will be asked to assign different numbers to either A or B.&amp;#10;&amp;#10;You can do this by pressing the &lt;- or -&gt; arrow keys.&amp;#10;Whether you have chosen correctly will be indicated by pictures.&amp;#10;&amp;#10;We'll start with some trial runs,&amp;#10;so you can better understand the experiment.&amp;#10;&amp;#10;&amp;#10;Press any key to continue!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="70" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_2">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="BlockCode">
      <CodeComponent name="BlockCode1">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="var BlockCounter = 0;&amp;#10;var CycleCounter = 0;&amp;#10;var TrialCounter = 0;&amp;#10;&amp;#10;function randomUniqueNum(min, max, even, outputCount) {&amp;#10;&amp;#10;    let arr = []&amp;#10;    if (even == true){&amp;#10;      for (let i = min; i &lt;= max; i+=2) {&amp;#10;        arr.push(i)&amp;#10;      }&amp;#10;    } else {&amp;#10;      for (let i = min + 1; i &lt;= max; i+=2) {&amp;#10;        arr.push(i)&amp;#10;      }&amp;#10;    }&amp;#10;&amp;#10;    let result = [];&amp;#10;    for (let i = 1; i &lt;= outputCount; i++) {&amp;#10;      const randomIndex = Math.floor(Math.random() * arr.length);&amp;#10;      result.push(arr[randomIndex]);&amp;#10;      arr.splice(randomIndex, 1);&amp;#10;    }&amp;#10;  &amp;#10;    return result;&amp;#10;}&amp;#10;&amp;#10;//generate random numbers&amp;#10;var fNeven = randomUniqueNum(10,99, true, 4)&amp;#10;var fNodd = randomUniqueNum(10,99, false, 4)&amp;#10;&amp;#10;var numbarray = [fNeven, fNodd, fNeven, fNodd]&amp;#10;&amp;#10;//Set up list with correct category (4 per cycle * 4 blocks, randomized)&amp;#10;var CorrCat = [];&amp;#10;&amp;#10;for (let i = 1; i &lt;= 2; i++) {&amp;#10;    var ABlist = [&quot;A&quot;, &quot;A&quot;, &quot;B&quot;, &quot;B&quot;];&amp;#10;    shuffle(ABlist);&amp;#10;    CorrCat.push(ABlist);&amp;#10;}&amp;#10;&amp;#10;var fN = numbarray.slice(0,2).flat()&amp;#10;&amp;#10;//Set up dict with correct category for lookup&amp;#10;var CorrDict = {};&amp;#10;fN.forEach((key, i) =&gt; CorrDict[key] = CorrCat.flat()[i]);&amp;#10;console.log(CorrDict)" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="#Set up order of Blocks (beginning randomized, then alternating)&amp;#10;Blocklist = [&quot;social&quot;, &quot;nonsocial&quot;]&amp;#10;random.shuffle(Blocklist)&amp;#10;Blocklist = Blocklist*2&amp;#10;&amp;#10;#Set up 16 2-digit stimuli, no replacement&amp;#10;fN = random.sample(range(10, 100), 16)&amp;#10;numbarray = [fN[0:4],&amp;#10;             fN[4:8],&amp;#10;             fN[8:12],&amp;#10;             fN[12:16]]&amp;#10;&amp;#10;#Set up list with correct category (4 per cycle * 4 blocks, randomized)&amp;#10;CorrCat = []&amp;#10;&amp;#10;for x in range(4):&amp;#10;    ABlist = [&quot;A&quot;, &quot;A&quot;, &quot;B&quot;, &quot;B&quot;]&amp;#10;    random.shuffle(ABlist)&amp;#10;    CorrCat.append(ABlist)&amp;#10;&amp;#10;#flatten list&amp;#10;CorrCat_new = [item for sublist in CorrCat for item in sublist]&amp;#10;#Set up dict with correct category for lookup&amp;#10;CorrDict = dict(zip(fN, CorrCat_new))&amp;#10;print(&quot;CorrDict:&quot;, CorrDict)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="//Set up order of Blocks (beginning randomized, then alternating)&amp;#10;console.log(&quot;Blocklist: &quot; + Blocklist)&amp;#10;Blocklist = [&quot;social&quot;, &quot;nonsocial&quot;];&amp;#10;console.log(&quot;Blocklist: &quot; + Blocklist)&amp;#10;Blocklist = shuffle(Blocklist)&amp;#10;console.log(&quot;Blocklist: &quot; + Blocklist)&amp;#10;Blocklist = Blocklist.concat(Blocklist)&amp;#10;console.log(&quot;Blocklist:&quot; + Blocklist)&amp;#10;console.log(&quot;BlockCounter: &quot; + BlockCounter)&amp;#10;console.log(&quot;Blocklist[BlockCounter]:&quot; + Blocklist[BlockCounter])&amp;#10;console.log(&quot;Blocklist[BlockCounter] == 'social':&quot; + Blocklist[BlockCounter] == &quot;social&quot;)&amp;#10;//Set up 16 2-digit stimuli, no replacement&amp;#10;//Define function unique random numbers&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (Blocklist[BlockCounter] == &quot;social&quot;) {&amp;#10;    //trial_file = &quot;trials_social.xlsx&quot;;&amp;#10;    filenames_noxl = [  [&quot;Stimuli/neutral/Still.jpg&quot;, &quot;Stimuli/social/happy/F01-Happy Women.mp4&quot;, &quot;Stimuli/social/angry/F04-Angry Women.mp4&quot;], &amp;#10;                        [&quot;Stimuli/neutral/Still.jpg&quot;, &quot;Stimuli/social/happy/M02-Happy Man.mp4&quot;, &quot;Stimuli/social/angry/M06-Angry Man.mp4&quot;], &amp;#10;                        [&quot;Stimuli/neutral/Still.jpg&quot;, &quot;Stimuli/social/happy/F01-Happy Women.mp4&quot;, &quot;Stimuli/social/angry/F04-Angry Women.mp4&quot;], &amp;#10;                        [&quot;Stimuli/neutral/Still.jpg&quot;, &quot;Stimuli/social/happy/M02-Happy Man.mp4&quot;, &quot;Stimuli/social/angry/M06-Angry Man.mp4&quot;]];&amp;#10;} else {&amp;#10;    if (Blocklist[BlockCounter] == &quot;nonsocial&quot;) {&amp;#10;        //trial_file = &quot;trials_nonsocial.xlsx&quot;;&amp;#10;        filenames_noxl = [  [&quot;Stimuli/neutral/Still.jpg&quot;, &quot;Stimuli/nonsocial/Right Tick.mp4&quot;, &quot;Stimuli/nonsocial/Wrong Tick.mp4&quot;], &amp;#10;                            [&quot;Stimuli/neutral/Still.jpg&quot;, &quot;Stimuli/nonsocial/Right Tick.mp4&quot;, &quot;Stimuli/nonsocial/Wrong Tick.mp4&quot;], &amp;#10;                            [&quot;Stimuli/neutral/Still.jpg&quot;, &quot;Stimuli/nonsocial/Right Tick.mp4&quot;, &quot;Stimuli/nonsocial/Wrong Tick.mp4&quot;], &amp;#10;                            [&quot;Stimuli/neutral/Still.jpg&quot;, &quot;Stimuli/nonsocial/Right Tick.mp4&quot;, &quot;Stimuli/nonsocial/Wrong Tick.mp4&quot;]];&amp;#10;    }&amp;#10;}&amp;#10;&amp;#10;console.log(&quot;filenames_noxl:&quot; + filenames_noxl)&amp;#10;/*path = os.path.join(cwd, trial_file)&amp;#10;book = openpyxl.load_workbook(filename = path)&amp;#10;sheet = book.active&amp;#10;&amp;#10;listAB = ['A', 'B']*2&amp;#10;random.shuffle(listAB)&amp;#10;&amp;#10;for index, element in enumerate(listAB, start=1):&amp;#10;sheet.cell(row = index + 1, column = 5).value = element&amp;#10;&amp;#10;filenames = []&amp;#10;for x in range(4):&amp;#10;filenames.append([])&amp;#10;&amp;#10;#here you iterate over the rows in the specific column&amp;#10;for row in range(2,6):&amp;#10;for column in &quot;BCD&quot;:  #Here you can add or reduce the columns&amp;#10;cell_name = &quot;{}{}&quot;.format(column, row)&amp;#10;filenames[row-2].append(sheet[cell_name].value) # the value of the specific cell&amp;#10;&amp;#10;randnumbers = []&amp;#10;for x in range(1, 5):&amp;#10;randnumbers.append(random.randint(9, 99))&amp;#10;&amp;#10;for row in range(2,6):&amp;#10;for column in &quot;A&quot;:  #Here you can add or reduce the columns&amp;#10;cell_name = &quot;{}{}&quot;.format(column, row)&amp;#10;sheet[cell_name].value = randnumbers[row-2]# the value of the specific cell&amp;#10;&amp;#10;book.save(filename = trial_file)*/&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#Define filenames according to Block&amp;#10;if Blocklist[blocks.thisRepN]== &quot;social&quot;:&amp;#10;    #trial_file = &quot;trials_social.xlsx&quot;&amp;#10;    filenames_noxl = [&amp;#10;        [&quot;ADFES/Freigestellt/Neutral/F01-Neutral-Face Forward_freigestellt.mp4&quot;, &quot;ADFES/Freigestellt/Joy/Used/F01-Joy-Face Forward_freigestellt.mp4&quot;, &quot;ADFES/Freigestellt/Anger/F01-Anger-Face Forward_freigestellt.mp4&quot;],&amp;#10;        [&quot;ADFES/Freigestellt/Neutral/F04-Neutral-Face Forward_freigestellt.mp4&quot;, &quot;ADFES/Freigestellt/Joy/Used/F04-Joy-Face Forward_freigestellt.mp4&quot;, &quot;ADFES/Freigestellt/Anger/F04-Anger-Face Forward_freigestellt.mp4&quot;],&amp;#10;        [&quot;ADFES/Freigestellt/Neutral/M06-Neutral-Face Forward_freigestellt.mp4&quot;, &quot;ADFES/Freigestellt/Joy/Used/M06-Joy-Face Forward_freigestellt.mp4&quot;, &quot;ADFES/Freigestellt/Anger/M06-Anger-Face Forward_freigestellt.mp4&quot;],&amp;#10;        [&quot;ADFES/Freigestellt/Neutral/M02-Neutral-Face Forward_freigestellt.mp4&quot;, &quot;ADFES/Freigestellt/Joy/Used/M02-Joy-Face Forward_freigestellt.mp4&quot;, &quot;ADFES/Freigestellt/Anger/M02-Anger-Face Forward_freigestellt.mp4&quot;]&amp;#10;    ]&amp;#10;elif Blocklist[blocks.thisRepN] == &quot;nonsocial&quot;:&amp;#10;    #trial_file = &quot;trials_nonsocial.xlsx&quot;&amp;#10;    filenames_noxl = [&amp;#10;        [&quot;Mandalas_new/neutral/Mandala3_neutral.mp4&quot;, &quot;Mandalas_new/happy/Mandala3_happy.mp4&quot;, &quot;Mandalas_new/angry/Mandala3_angry.mp4&quot;],&amp;#10;        [&quot;Mandalas_new/neutral/Mandala2_neutral.mp4&quot;, &quot;Mandalas_new/happy/Mandala2_happy.mp4&quot;, &quot;Mandalas_new/angry/Mandala2_angry.mp4&quot;],&amp;#10;        [&quot;Mandalas_new/neutral/Mandala4_neutral.mp4&quot;, &quot;Mandalas_new/happy/Mandala4_happy.mp4&quot;, &quot;Mandalas_new/angry/Mandala4_angry.mp4&quot;],&amp;#10;        [&quot;Mandalas_new/neutral/Mandala1_neutral.mp4&quot;, &quot;Mandalas_new/happy/Mandala1_happy.mp4&quot;, &quot;Mandalas_new/angry/Mandala1_angry.mp4&quot;]&amp;#10;    ]&amp;#10;#Load Excel file (not relevant anymore)&amp;#10;'''path = os.path.join(cwd, trial_file)&amp;#10;book = openpyxl.load_workbook(filename = path)&amp;#10;sheet = book.active&amp;#10;&amp;#10;listAB = ['A', 'B']*2&amp;#10;random.shuffle(listAB)&amp;#10;&amp;#10;for index, element in enumerate(listAB, start=1):&amp;#10;    sheet.cell(row = index + 1, column = 5).value = element&amp;#10;&amp;#10;filenames = []&amp;#10;for x in range(4):&amp;#10;    filenames.append([])&amp;#10;&amp;#10;#here you iterate over the rows in the specific column&amp;#10;for row in range(2,6):&amp;#10;    for column in &quot;BCD&quot;:  #Here you can add or reduce the columns&amp;#10;        cell_name = &quot;{}{}&quot;.format(column, row)&amp;#10;        filenames[row-2].append(sheet[cell_name].value) # the value of the specific cell&amp;#10;&amp;#10;randnumbers = []&amp;#10;for x in range(1, 5):&amp;#10;    randnumbers.append(random.randint(9, 99))&amp;#10;&amp;#10;for row in range(2,6):&amp;#10;    for column in &quot;A&quot;:  #Here you can add or reduce the columns&amp;#10;        cell_name = &quot;{}{}&quot;.format(column, row)&amp;#10;        sheet[cell_name].value = randnumbers[row-2]# the value of the specific cell&amp;#10;&amp;#10;book.save(filename = trial_file)'''&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="BlockCode1" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="LateralizationByCycle">
      <CodeComponent name="code_8">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="CycleText = ''" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="CycleText = &quot;&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/*function randomChoice(arr) {&amp;#10;  return arr[Math.floor(Math.random() * arr.length)];&amp;#10;}*/&amp;#10;&amp;#10;if (randomChoice([true, false])) {&amp;#10;    right_cat = &quot;A&quot;;&amp;#10;    left_cat = &quot;B&quot;;&amp;#10;} else {&amp;#10;    left_cat = &quot;A&quot;;&amp;#10;    right_cat = &quot;B&quot;;&amp;#10;}&amp;#10;&amp;#10;console.log(&quot;BlockCounter:&quot; + BlockCounter)&amp;#10;shuffle(numbarray[BlockCounter]);&amp;#10;console.log(&quot;numbarray[BlockCounter]:&quot;, numbarray[BlockCounter]);&amp;#10;shuffle(filenames_noxl);&amp;#10;console.log(filenames_noxl);&amp;#10;console.log(&quot;Cycletext for next block cond: &quot;, + ((BlockCounter in [1, 2, 3]) &amp;&amp; (CycleCounter == 0)))&amp;#10;&amp;#10;//&quot;blocks:&quot; + BlockCounter.toString()) + &amp;#10;    //&quot;, cycles:&quot;) + CycleCounter.toString()) + &quot;\nright_cat: &quot;) + &amp;#10;    //right_cat.toString()) + &quot; left_cat: &quot;) + &amp;#10;    //left_cat.toString()) + &amp;#10;if (((BlockCounter == 0) &amp;&amp; (CycleCounter == 0))) {&amp;#10;    CycleText1_dur = undefined&amp;#10;    CycleText2_dur = 0&amp;#10;    CycleText3_dur = 0&amp;#10;    CycleText4_dur = 0&amp;#10;    CycleText = centerfy(&amp;#10;    &quot;\n\nWe are now starting the first block.\n\n&quot; +&amp;#10;    &quot;Everything works exactly as in the training runs.&quot; +&amp;#10;    &quot;\n\nIn the first pass you must \n&quot; +&amp;#10;    &quot;guess the assignment with the arrow keys.\n\n&quot; +&amp;#10;    &quot;But try to memorize the correct assignment!\n&quot; +&amp;#10;    &quot;In total, you will see 4 different numbers.\n&quot; + &amp;#10;    &quot;After that, there will be a short pause. \n\n&quot; +&amp;#10;    &quot;Press any key, \n &quot; +&amp;#10;    &quot;to start the first block!\n&quot;);&amp;#10;} else {&amp;#10;    if (([0, 1, 2, 3].includes(BlockCounter)) &amp;&amp; (CycleCounter == 1)) {&amp;#10;        CycleText1_dur = 0&amp;#10;        CycleText2_dur = undefined&amp;#10;        CycleText3_dur = 0&amp;#10;        CycleText4_dur = 0&amp;#10;        CycleText = centerfy(&amp;#10;       &quot;You have now seen all the numbers in this block \n&quot; +&amp;#10;        &quot;a first time.\n\nPause for a moment!\n\n&quot; +&amp;#10;        &quot;You will be shown all the numbers again in a moment.\n&quot; + &amp;#10;        &quot;Try to match the numbers correctly.\n\n&quot; +&amp;#10;        &quot;Notice that the pictures and numbers have been recombined.\n&quot; +&amp;#10;        &quot;A and B might also have switched places!\n\n&quot; +&amp;#10;        &quot;Press any key,\n&quot; +&amp;#10;        &quot;to start the next pass.&quot;);&amp;#10;    } else {&amp;#10;        if (([0, 1, 2, 3].includes(BlockCounter)) &amp;&amp; ([2, 3, 4, 5].includes(CycleCounter))) {&amp;#10;            CycleText1_dur = 0&amp;#10;            CycleText2_dur = 0&amp;#10;            CycleText3_dur = undefined&amp;#10;            CycleText4_dur = 0&amp;#10;            CycleText = centerfy(&amp;#10;            &quot;Very good!\n\n&quot; +&amp;#10;            &quot;You have completed another pass!\n\n&quot; +&amp;#10;            &quot;There are still &quot; + (6 - CycleCounter).toString() +&amp;#10;            &quot; more passes,\n&quot; +&amp;#10;            &quot;in which you will be shown all the numbers again.\n\n&quot; +&amp;#10;            &quot;Press any key,\n &quot;+ &amp;#10;            &quot;to start the next run.&quot;);&amp;#10;        } else {&amp;#10;            if (([1, 2, 3].includes(BlockCounter)) &amp;&amp; (CycleCounter == 0)) {&amp;#10;                CycleText1_dur = 0&amp;#10;                CycleText2_dur = 0&amp;#10;                CycleText3_dur = 0&amp;#10;                CycleText4_dur = undefined&amp;#10;                CycleText = centerfy(&amp;#10;                &quot;You have now completed a full block.\n\n&quot; + &amp;#10;                &quot;In the next block you will see different images.\n&quot; +&amp;#10;                &quot;Instead of fractals you will now see faces.\n&quot; +&amp;#10;                &quot;(or vice versa).\n\n&quot; + &amp;#10;                &quot;The principle remains the same.\n\n&quot; +&amp;#10;                &quot;There are still &quot; + (4- BlockCounter).toString() +&amp;#10;                &quot; more blocks.\n\n&quot; +&amp;#10;                &quot;When you are ready \n &quot; +&amp;#10;                &quot;press any button,\n&quot; +&amp;#10;                &quot;to start the next block.\n&quot;);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#randomize lateralization of A and B each cycle&amp;#10;if choice([True, False]):&amp;#10;    right_cat = &quot;A&quot;&amp;#10;    left_cat = &quot;B&quot;&amp;#10;else:&amp;#10;    left_cat = &quot;A&quot;&amp;#10;    right_cat = &quot;B&quot;&amp;#10;    &amp;#10;#shuffe stimuli per cycle&amp;#10;random.shuffle(numbarray[blocks.thisRepN])&amp;#10;print(&quot;numbarray[blocks.thisRepN]:&quot;, numbarray[blocks.thisRepN])&amp;#10;#shuffle filenames per cycle&amp;#10;random.shuffle(filenames_noxl)&amp;#10;print(filenames_noxl)&amp;#10;&amp;#10;###IRRELEVANT&amp;#10;#randomize picture/number association each cycle&amp;#10;'''&amp;#10;random.shuffle(filenames)&amp;#10;&amp;#10;for row in range(2,6):&amp;#10;    index = 0&amp;#10;    for column in &quot;BCD&quot;:  #Here you can add or reduce the columns&amp;#10;        cell_name = &quot;{}{}&quot;.format(column, row)&amp;#10;        sheet[cell_name].value = filenames[row-2][index]# the value of the specific cell&amp;#10;        index += 1&amp;#10;&amp;#10;book.save(filename = trial_file)&amp;#10;'''&amp;#10;&amp;#10;#Define Text, dependent on Block and Cycle&amp;#10;if blocks.thisN == 0 and cycles.thisRepN == 0:&amp;#10;    CycleText = centerfy(&amp;#10;    'blocks:' + str(blocks.thisN) + ', cycles:' + str(cycles.thisRepN) + '\n'&amp;#10;    'right_cat: ' + str(right_cat) + ' left_cat: ' + str(left_cat) + '\n\n'&amp;#10;    'Wir beginnen nun mit dem ersten Block.\n\n' &amp;#10;    'Alles funktioniert genau wie in den Trainingsdurchläufen.\n\n'&amp;#10;    'Im ersten Durchgang müssen Sie \n die Zuordnung mit den Pfeiltasten raten.\n\n'&amp;#10;    'Versuchen Sie aber, sich die richtige Zuordnung \n '&amp;#10;    'genau einzuprägen!\n'&amp;#10;    'Insgesamt werden sie 4 verschiedene Zahlen sehen,\n danach gibt es eine kurze Pause.\n\n'&amp;#10;    'Wenn Sie keine Fragen mehr haben, \n drücken Sie eine beliebige Taste, \n um den ersten Block zu starten!\n'&amp;#10;    )&amp;#10;elif blocks.thisN in [0, 1, 2, 3] and cycles.thisRepN == 1:&amp;#10;    CycleText = centerfy(&amp;#10;    'blocks:' + str(blocks.thisN) + ', cycles:' + str(cycles.thisRepN) + '\n'&amp;#10;    'right_cat: ' + str(right_cat) + ' left_cat: ' + str(left_cat) + '\n\n'&amp;#10;    'Sie haben nun alle Zahlen in diesem Block \n ein erstes Mal gesehen.\n\n'&amp;#10;    'Machen Sie kurz Pause!\n\n'&amp;#10;    'Sie werden gleich erneut alle Zahlen gezeigt bekommen.\n' &amp;#10;    'Versuchen Sie, die Zahlen richtig zuzuordnen.\n\n'&amp;#10;    'Beachten Sie, dass Bilder und Zahlen\n' &amp;#10;    'nun neu kombiniert wurden.\n\n'&amp;#10;    'Drücken Sie eine beliebige Taste,\n'&amp;#10;    'um den nächsten Durchgang zu starten.'&amp;#10;    )&amp;#10;elif blocks.thisN in [0, 1, 2, 3] and cycles.thisRepN in [2, 3, 4, 5, 6, 7, 8]:&amp;#10;    CycleText = centerfy(&amp;#10;    'blocks:' + str(blocks.thisN) + ', cycles:' + str(cycles.thisRepN) + '\n'&amp;#10;    'right_cat: ' + str(right_cat) + ' left_cat: ' + str(left_cat) + '\n\n'&amp;#10;    'Sehr gut!\n\n'&amp;#10;    'Sie haben einen weiteren Durchgang abgeschlossen!\n\n'&amp;#10;    'Es folgen noch ' + str(cycles.nRemaining + 1) + ' weitere Durchgänge,\n'&amp;#10;    'in denen Sie wieder jeweils alle Zahlen gezeigt bekommen.\n\n'&amp;#10;    'Drücken Sie eine beliebige Taste, \n'&amp;#10;    'um den nächsten Durchgang zu starten.'&amp;#10;    )&amp;#10;elif blocks.thisN in [1, 2, 3] and cycles.thisRepN == 0:&amp;#10;    CycleText = centerfy(&amp;#10;    'blocks:' + str(blocks.thisN) + ', cycles:' + str(cycles.thisRepN) + '\n'&amp;#10;    'right_cat: ' + str(right_cat) + ' left_cat: ' + str(left_cat) + '\n\n'&amp;#10;    'Sie haben nun einen  vollständigen Block abgeschlossen.\n\n'&amp;#10;    'Im nächsten Block werden andere Bilder angezeigt.\n'&amp;#10;    'Statt Fraktalen werden Sie nun Gesichter sehen\n'&amp;#10;    '(oder umgekehrt).\n\n'&amp;#10;    'Das Prinzip bleibt gleich.\n\n'&amp;#10;    'Es folgen noch ' + str(blocks.nRemaining + 1) + ' weitere Blöcke.\n\n'&amp;#10;    'Wenn Sie bereit sind, \n drücken Sie eine beliebige Taste,\n'&amp;#10;    'um den nächsten Block zu starten.\n'&amp;#10;    )" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_8" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="CycleInfo">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="code" updates="constant" name="letterHeight"/>
        <Param val="CycleInfo" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$CycleText" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="CycleText1">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="code" updates="constant" name="letterHeight"/>
        <Param val="CycleText1" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$CycleText1_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="We are now starting the first block.&amp;#10;&amp;#10;In the first pass you must&amp;#10;guess the assignment with the arrow keys.&amp;#10;Try to memorize the correct assignment!&amp;#10;&amp;#10;In total, you will see 4 different numbers.&amp;#10;After that, there will be a short pause.&amp;#10;&amp;#10;&amp;#10;Press any key,&amp;#10;to start the first block!" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="CycleText2">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="code" updates="constant" name="letterHeight"/>
        <Param val="CycleText2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$CycleText2_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="PAUSE&amp;#10;&amp;#10;Press any key,&amp;#10;to start the next pass.&amp;#10;&amp;#10;(A and B might have switched places!)" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="CycleText3">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="code" updates="constant" name="letterHeight"/>
        <Param val="CycleText3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$CycleText3_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="PAUSE&amp;#10;&amp;#10;Press any key, to start the next cycle." valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="CycleText4">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="code" updates="constant" name="letterHeight"/>
        <Param val="CycleText4" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$CycleText4_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You have now completed a full block.&amp;#10;&amp;#10;In the next block you will see different images.&amp;#10;&amp;#10;Instead of checkmarks/crosses you will now see faces (or vice versa).&amp;#10;&amp;#10;The principle remains the same.&amp;#10;&amp;#10;There are 4 blocks in total.&amp;#10;&amp;#10;When you are ready&amp;#10;press any button,&amp;#10;to start the next block." valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_6">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_6" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Alles_Klar_2">
      <CodeComponent name="Allesklarcode_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="Allesklar = centerfy('Wie Sie gesehen haben,\n ändert sich das Bild wieder entsprechend Ihrer Antwort.\n\n'&amp;#10;'Bunte, bewegte Bilder zeigen eine richtige Antwort an,\n bei einer falschen Antwort wird das Bild grau und verschwommen.\n\n'&amp;#10;'Ganz so einfach wird es aber im richtigen Experiment leider nicht.\n'&amp;#10;'Sie werden sich nicht immer auf die Bilder verlassen können.\n'&amp;#10;'Stattdessen bekommen Sie bei einer richtigen Antwort MEISTENS die fröhlichen Gesichter bzw. bunten Fraktale zu sehen. \n'&amp;#10;'Das heißt, selbst wenn Sie richtig geantwortet haben, \n' &amp;#10;'kann es manchmal sein, dass Sie trotzdem ein ärgerliches Gesicht bzw. ein graues Fraktal sehen \n'&amp;#10;'Im nächsten Durchgang wird durch Text angezeigt, ob Sie richtig oder falsch geantwortet haben. \n'&amp;#10;'Achten Sie darauf, dass Text und Bild meistens, aber nicht immer übereinstimmen.')" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Allesklarcode_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="Allesklartext_2">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="code" updates="constant" name="letterHeight"/>
        <Param val="Allesklartext_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="As you have seen, the image changes again according to your answer.&amp;#10;This time, tickmarks indicate a correct answer, while a cross indicates a wrong answer. &amp;#10;&amp;#10;But it won't be quite that simple in the real experiment!&amp;#10;You will not always be able to rely on the pictures.&amp;#10;&amp;#10;Instead, if you answer correctly, you will&amp;#10;MOSTLY see the happy faces or tickmarks.&amp;#10;&amp;#10;That is, even if you answered correctly,&amp;#10;sometimes you may still see a frowning face or a cross.&amp;#10;&amp;#10;In the next pass, text will indicate whether you answered correctly or incorrectly.&amp;#10;&amp;#10;Note that text and image mostly, but not always, match." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="70" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="Allesklar_resp_2">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Allesklar_resp_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Intertrial_Interval">
      <TextComponent name="text_2">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="console.log(TrialCounter);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="print(trials.thisN)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if(TrialCounter &lt; 3){&amp;#10;TrialCounter = TrialCounter + 1;&amp;#10;} else {&amp;#10;    if(TrialCounter == 3) {&amp;#10;        TrialCounter = 0;&amp;#10;        console.log(&quot;TrialCounter reset to: &quot; + TrialCounter)&amp;#10;    }&amp;#10;}" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="trial">
      <CodeComponent name="code_4">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="&amp;#10;&amp;#10;thisExp.addData(&quot;left&quot;, left_cat);&amp;#10;thisExp.addData(&quot;right&quot;, right_cat);&amp;#10;thisExp.addData(&quot;stim&quot;, Stim);&amp;#10;if ((response_training.keys === &quot;left&quot;)) {&amp;#10;    thisExp.addData(&quot;ParticipantAnswer&quot;, left_cat);&amp;#10;} else {&amp;#10;    if ((response_training.keys === &quot;right&quot;)) {&amp;#10;        thisExp.addData(&quot;ParticipantAnswer&quot;, right_cat);&amp;#10;    } else {&amp;#10;        if ((response_training.keys === null)) {&amp;#10;            thisExp.addData(&quot;ParticipantAnswer&quot;, null);&amp;#10;        }&amp;#10;    }&amp;#10;}" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="#Speichern von keyangry und keyhappy ins Data file in jedem Trial&amp;#10;thisExp.addData ('left', left_cat)&amp;#10;thisExp.addData ('right', right_cat)&amp;#10;thisExp.addData('stim', Stim)&amp;#10;&amp;#10;if response_training.keys == 'left':&amp;#10;    thisExp.addData('ParticipantAnswer', left_cat)&amp;#10;elif response_training.keys == 'right':&amp;#10;    thisExp.addData('ParticipantAnswer', right_cat)&amp;#10;elif response_training.keys == None:&amp;#10;    thisExp.addData('ParticipantAnswer', None)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="fix_cross">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="fix_cross" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="neutral_still">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$filename_neutral" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="neutral_still" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="[0, 0.225]" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="512" valType="code" updates="constant" name="texture resolution"/>
        <Param val="height" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <MovieComponent name="new_neutral">
        <Param val="True" valType="bool" updates="None" name="No audio"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="moviepy" valType="str" updates="None" name="backend"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="None" name="loop"/>
        <Param val="$filename_neutral" valType="str" updates="set every repeat" name="movie"/>
        <Param val="new_neutral" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="[0, 0.225]" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="[0.625, 0.5]" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="height" valType="str" updates="None" name="units"/>
        <Param val="1" valType="num" updates="None" name="volume"/>
      </MovieComponent>
      <KeyboardComponent name="response_training">
        <Param val="'left','right'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$CorrCat" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="response_training" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="Stimulus">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="Stimulus" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(int(Stim))" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="left_disp">
        <Param val="grey" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="left_disp" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$left_cat" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="right_disp">
        <Param val="grey" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="right_disp" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$right_cat" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="feedback">
      <CodeComponent name="code_6">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="#Initialize color&amp;#10;feedback = ''&amp;#10;left_color = ''&amp;#10;right_color = ''" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="feedback = &quot;&quot;;&amp;#10;left_color = &quot;&quot;;&amp;#10;right_color = &quot;&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((((response_training_2.keys == &quot;left&quot;) &amp;&amp; (CorrDict[stim_thisN] == left_cat)) || ((response_training_2.keys == &quot;right&quot;) &amp;&amp; (CorrDict[stim_thisN] == right_cat)))) {&amp;#10;    if(weighted_random([true, false], [0.85, 0.15])){&amp;#10;        //congruent&amp;#10;        thisExp.addData(&quot;Congr/Incongr&quot;, &quot;Congruent&quot;)&amp;#10;        thisExp.addData(&quot;Reward&quot;, 1)&amp;#10;        console.log(&quot;Congruent image!&quot;)&amp;#10;        time_h = 6.0;&amp;#10;        time_a = 0.0;&amp;#10;    } else {&amp;#10;        //incongruent&amp;#10;        thisExp.addData(&quot;Congr/Incongr&quot;, &quot;Incongruent&quot;)&amp;#10;        thisExp.addData(&quot;Reward&quot;, 0)&amp;#10;        console.log(&quot;Incongruent image!&quot;)&amp;#10;        time_h = 0.0;&amp;#10;        time_a = 6.0;&amp;#10;    }&amp;#10;} else {&amp;#10; if(weighted_random([true, false], [0.85, 0.15])){&amp;#10;        //congruent&amp;#10;        console.log(&quot;Congruent image!&quot;)&amp;#10;        thisExp.addData(&quot;Congr/Incongr&quot;, &quot;Congruent&quot;)&amp;#10;        thisExp.addData(&quot;Reward&quot;, 0)&amp;#10;        time_h = 0.0;&amp;#10;        time_a = 6.0;&amp;#10;    } else {&amp;#10;        //incongruent&amp;#10;        console.log(&quot;Incongruent image!&quot;)&amp;#10;        thisExp.addData(&quot;Congr/Incongr&quot;, &quot;Congruent&quot;)&amp;#10;        thisExp.addData(&quot;Reward&quot;, 1)&amp;#10;        time_h = 6.0;&amp;#10;        time_a = 0.0;&amp;#10;        }     &amp;#10;}&amp;#10;time_miss = 0;&amp;#10;if ((response_training_2.keys == &quot;left&quot;)) {&amp;#10;    left_color = &quot;white&quot;;&amp;#10;    right_color = &quot;grey&quot;;&amp;#10;} else {&amp;#10;    if ((response_training_2.keys == &quot;right&quot;)) {&amp;#10;        left_color = &quot;grey&quot;;&amp;#10;        right_color = &quot;white&quot;;&amp;#10;    } else {&amp;#10;        if ((response_training_2.keys == null)) {&amp;#10;            left_color = &quot;grey&quot;;&amp;#10;            right_color = &quot;grey&quot;;&amp;#10;            time_miss = 6;&amp;#10;            time_a = 0;&amp;#10;            time_h = 0;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#Feedback Zuweisung&amp;#10;# to make feedback probabilistic: uncomment nested if clause&amp;#10;# this will show happy for correct (congruent) in 80% of cases &amp;#10;# and angry for correct (incongruent) in 20% of cases&amp;#10;# probability can be changed by manipulating the sequence in p&amp;#10;&amp;#10;&amp;#10;#if correct show happy video (with 0.8 probability)&amp;#10;if (response_training_2.keys == 'left' and CorrDict[stim_thisN] == left_cat) or (response_training_2.keys == 'right' and CorrDict[stim_thisN] == right_cat):&amp;#10;    if choice([True, False], p = [0.8, 0.2]):&amp;#10;        time_h = 6.0&amp;#10;        time_a = 0.0&amp;#10;    else:&amp;#10;        time_h = 0.0&amp;#10;        time_a = 6.0&amp;#10;&amp;#10;#if not correct show angry video (with 0.8 probability)&amp;#10;else:&amp;#10;    if choice([True, False], p = [0.8, 0.2]):&amp;#10;        time_h = 0.0&amp;#10;        time_a = 6.0&amp;#10;    else:&amp;#10;        time_h = 6.0&amp;#10;        time_a = 0.0&amp;#10;&amp;#10;#Set color of A/B on screen after response&amp;#10;time_miss = 0&amp;#10;if response_training_2.keys == 'left':&amp;#10;    left_color = 'black'&amp;#10;    right_color = 'grey'&amp;#10;elif response_training_2.keys == 'right':&amp;#10;    left_color = 'grey'&amp;#10;    right_color = 'black'&amp;#10;elif response_training_2.keys == None:&amp;#10;    left_color = 'grey'&amp;#10;    right_color = 'grey'&amp;#10;    time_miss = 6&amp;#10;    time_a = 0&amp;#10;    time_h = 0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="thisExp.addData(&quot;CorrCat&quot;, CorrDict[stim_thisN])&amp;#10;thisExp.addData(&quot;BlockType&quot;, Blocklist[BlockCounter])&amp;#10;&amp;#10;if ((((response_training_2.keys == &quot;left&quot;) &amp;&amp; (CorrDict[stim_thisN] == left_cat)) || ((response_training_2.keys == &quot;right&quot;) &amp;&amp; (CorrDict[stim_thisN] == right_cat)))) {&amp;#10;    thisExp.addData(&quot;CorrectAns&quot;, &quot;Yes&quot;);&amp;#10;    console.log(&quot;Correct Answer!&quot;);&amp;#10;} else {&amp;#10;    thisExp.addData(&quot;CorrectAns&quot;, &quot;No&quot;);&amp;#10;    console.log(&quot;Wrong Answer!&quot;);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if (response_training_2.keys == 'left' and CorrDict[stim_thisN] == left_cat) or (response_training_2.keys == 'right' and CorrDict[stim_thisN] == right_cat):&amp;#10;    thisExp.addData ('CorrectAns', &quot;Yes&quot;)&amp;#10;    print(&quot;Correct Answer!&quot;)&amp;#10;else:&amp;#10;    thisExp.addData ('CorrectAns', &quot;No&quot;)&amp;#10;    print(&quot;Wrong Answer!&quot;)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="feedback_miss2">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="feedback_miss2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.225)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="time_miss" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="PLEASE RESPOND FASTER!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <MovieComponent name="new_angry">
        <Param val="True" valType="bool" updates="None" name="No audio"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="moviepy" valType="str" updates="None" name="backend"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="6" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="None" name="loop"/>
        <Param val="$filename_thisN_angry" valType="str" updates="set every repeat" name="movie"/>
        <Param val="new_angry" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="[0, 0.225]" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="[0.5, 0.5]" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="time_a" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="height" valType="str" updates="None" name="units"/>
        <Param val="1" valType="num" updates="None" name="volume"/>
      </MovieComponent>
      <MovieComponent name="new_happy">
        <Param val="False" valType="bool" updates="None" name="No audio"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="moviepy" valType="str" updates="None" name="backend"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="6" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="None" name="loop"/>
        <Param val="$filename_thisN_happy" valType="str" updates="set every repeat" name="movie"/>
        <Param val="new_happy" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="[0, 0.225]" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="[0.5, 0.5]" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="time_h" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="height" valType="str" updates="None" name="units"/>
        <Param val="1" valType="num" updates="None" name="volume"/>
      </MovieComponent>
      <TextComponent name="left_disp_fb">
        <Param val="$left_color" valType="str" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="left_disp_fb" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$left_cat" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="right_disp_fb">
        <Param val="$right_color" valType="str" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="right_disp_fb" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$right_cat" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="Stimulus_fb">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="Stimulus_fb" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(int(stim_thisN))" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="Alles_klar">
      <CodeComponent name="Allesklarcode">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="Allesklar = centerfy(('Wie Sie gesehen haben\n verändert sich das Bild entsprechend Ihrer Antwort.\n\n'&amp;#10;'Fröhliche Gesichter zeigen eine richtige Antwort an,\n ärgerliche Gesichter eine Falsche.\n\n'&amp;#10;'Später sollen Sie versuchen,\n sich die richtige Zuordnung der Zahl genau einzuprägen. \n\n'&amp;#10;'Bild und Zahl sind einander zufällig zugeordnet\n und werden später neu kombiniert.\n'&amp;#10;'Sie müssen sich beim Einprägen also auf die Zahl konzentrieren!\n\n'&amp;#10;'Drücken Sie eine beliebige Taste, um fortzufahren!'))" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Allesklarcode" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_4">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_4" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="As you have seen, the picture changes according to your answer.&amp;#10;Happy faces indicate a correct answer, &amp;#10;while angry faces indicate a wrong answer.&amp;#10;&amp;#10;Later on, you should try to remember the correct assignment of the number. &amp;#10;&amp;#10;Press any key to continue!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="70" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_4">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_4" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instr_train_ns">
      <CodeComponent name="Allesklarcode_3">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="Allesklar = centerfy(('Im nächsten Durchgang werden Sie etwas andere Bilder sehen.\n\n'&amp;#10;'Das Prinzip bleibt aber gleich:\n'&amp;#10;' Das Bild verändert sich entsprechend einer richtigen/falschen Antwort.\n'&amp;#10;'Probieren wir es aus!'))" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Allesklarcode_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="In the next pass, you will see different pictures. &amp;#10;&amp;#10;But the principle remains the same&amp;#10;The picture changes according to a correct/wrong answer.&amp;#10;&amp;#10;Let's try it out!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="70" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_5">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_5" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instr_train_s">
      <TextComponent name="text_3">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You are about to see a number at the bottom of the screen. &amp;#10;Your task is to assign the number to either A or B using the arrow keys.&amp;#10;&amp;#10;The correct assignment is completely random&amp;#10;so you just have to guess at first.&amp;#10;&amp;#10;Additionally, you will see a picture above the number.&amp;#10;Whether you have chosen correctly will be indicated by a change in the picture.&amp;#10;&amp;#10;&amp;#10;Let's try a first round!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="70" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_3">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="feedback_train">
      <TextComponent name="feedback_miss">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="feedback_miss" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.225)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="time_miss" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="PLEASE RESPOND FASTER!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_9">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="console.log(&quot;CorrCatTrain:&quot;, CorrCatTrain)&amp;#10;console.log(&quot;left_cat:&quot;, left_cat)&amp;#10;console.log(&quot;CorrCatTrain == left_cat:&quot;, CorrCatTrain == left_cat)&amp;#10;if ((CorrCatTrain == left_cat)) {&amp;#10;    time_h = 6.0;&amp;#10;    time_a = 0.0;&amp;#10;} else {&amp;#10;    time_h = 0.0;&amp;#10;    time_a = 6.0;&amp;#10;}&amp;#10;time_miss = 0;&amp;#10;if ((response_training.keys == &quot;left&quot;)) {&amp;#10;    left_color = &quot;white&quot;;&amp;#10;    right_color = &quot;grey&quot;;&amp;#10;} else {&amp;#10;    if ((response_training.keys == &quot;right&quot;)) {&amp;#10;        left_color = &quot;grey&quot;;&amp;#10;        right_color = &quot;white&quot;;&amp;#10;    } else {&amp;#10;        if ((response_training.keys == null)) {&amp;#10;            left_color = &quot;grey&quot;;&amp;#10;            right_color = &quot;grey&quot;;&amp;#10;            time_miss = 6.0;&amp;#10;            time_h = 0.0;&amp;#10;            time_a = 0.0;&amp;#10;        }&amp;#10;    }&amp;#10;}" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#Feedback Training&amp;#10;&amp;#10;#Show happy/angry in 50% of cases&amp;#10;if CorrCat == left_cat:&amp;#10;    time_h = 6.0&amp;#10;    time_a = 0.0&amp;#10;else:&amp;#10;    time_h = 0.0&amp;#10;    time_a = 6.0&amp;#10;&amp;#10;#Set color of A/B on screen after response (and feedback for miss)&amp;#10;time_miss = 0&amp;#10;if response_training.keys == 'left':&amp;#10;    left_color = 'black'&amp;#10;    right_color = 'grey'&amp;#10;elif response_training.keys == 'right':&amp;#10;    left_color = 'grey'&amp;#10;    right_color = 'black'&amp;#10;elif response_training.keys == None:&amp;#10;    left_color = 'grey'&amp;#10;    right_color = 'grey'&amp;#10;    time_miss = 6.0&amp;#10;    time_h = 0.0&amp;#10;    time_a = 0.0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_9" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <MovieComponent name="new_angry_2">
        <Param val="True" valType="bool" updates="None" name="No audio"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="moviepy" valType="str" updates="None" name="backend"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="6" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="None" name="loop"/>
        <Param val="$filename_feedback_angry" valType="str" updates="set every repeat" name="movie"/>
        <Param val="new_angry_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="[0, 0.225]" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="[0.5, 0.5]" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="time_a" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="height" valType="str" updates="None" name="units"/>
        <Param val="1" valType="num" updates="None" name="volume"/>
      </MovieComponent>
      <MovieComponent name="new_happy_2">
        <Param val="False" valType="bool" updates="None" name="No audio"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="moviepy" valType="str" updates="None" name="backend"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="6" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="None" name="loop"/>
        <Param val="$filename_feedback_happy" valType="str" updates="set every repeat" name="movie"/>
        <Param val="new_happy_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="[0, 0.225]" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="[0.5, 0.5]" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="time_h" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="height" valType="str" updates="None" name="units"/>
        <Param val="1" valType="num" updates="None" name="volume"/>
      </MovieComponent>
      <TextComponent name="left_disp_fb_2">
        <Param val="$left_color" valType="str" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="left_disp_fb_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$left_cat" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="right_disp_fb_2">
        <Param val="$right_color" valType="str" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="right_disp_fb_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$right_cat" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="Stimulus_fb_2">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="Stimulus_fb_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(int(Stim))" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="trial_2">
      <CodeComponent name="code_7">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="filename_thisN_neutral = filenames_noxl[TrialCounter][0];&amp;#10;filename_thisN_happy = filenames_noxl[TrialCounter][1];&amp;#10;filename_thisN_angry = filenames_noxl[TrialCounter][2];&amp;#10;stim_thisN = numbarray[BlockCounter][TrialCounter];&amp;#10;console.log(&quot;stim_thisN:&quot;, stim_thisN);&amp;#10;console.log(&quot;CorrDict[stim_thisN]:&quot;, CorrDict[stim_thisN]);" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="filename_thisN_neutral = filenames_noxl[trials.thisRepN][0]&amp;#10;filename_thisN_happy = filenames_noxl[trials.thisRepN][1]&amp;#10;filename_thisN_angry = filenames_noxl[trials.thisRepN][2]&amp;#10;stim_thisN = numbarray[blocks.thisRepN][trials.thisRepN]&amp;#10;print(stim_thisN)&amp;#10;print(CorrDict[stim_thisN])" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="thisExp.addData(&quot;left&quot;, left_cat);&amp;#10;thisExp.addData(&quot;right&quot;, right_cat);&amp;#10;thisExp.addData(&quot;stim&quot;, stim_thisN);&amp;#10;if ((response_training_2.keys == &quot;left&quot;)) {&amp;#10;    thisExp.addData(&quot;ParticipantAnswer&quot;, left_cat);&amp;#10;} else {&amp;#10;    if ((response_training_2.keys == &quot;right&quot;)) {&amp;#10;        thisExp.addData(&quot;ParticipantAnswer&quot;, right_cat);&amp;#10;    } else {&amp;#10;        if ((response_training_2.keys == null)) {&amp;#10;            thisExp.addData(&quot;ParticipantAnswer&quot;, null);&amp;#10;        }&amp;#10;    }&amp;#10;}" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="#Speichern von keyangry und keyhappy ins Data file in jedem Trial&amp;#10;thisExp.addData ('left', left_cat)&amp;#10;thisExp.addData ('right', right_cat)&amp;#10;thisExp.addData('stim', stim_thisN)&amp;#10;&amp;#10;if response_training_2.keys == 'left':&amp;#10;    thisExp.addData('ParticipantAnswer', left_cat)&amp;#10;    print(&quot;Participant responded with:&quot;, left_cat)&amp;#10;elif response_training_2.keys == 'right':&amp;#10;    thisExp.addData('ParticipantAnswer', right_cat)&amp;#10;    print(&quot;Participant responded with:&quot;, right_cat)&amp;#10;elif response_training_2.keys == None:&amp;#10;    thisExp.addData('ParticipantAnswer', None)&amp;#10;    print(&quot;Participant responded with:&quot;, None)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_7" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="fix_cross_2">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="fix_cross_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <MovieComponent name="new_neutral_2">
        <Param val="True" valType="bool" updates="None" name="No audio"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="moviepy" valType="str" updates="None" name="backend"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="None" name="loop"/>
        <Param val="$filename_thisN_neutral" valType="str" updates="set every repeat" name="movie"/>
        <Param val="new_neutral_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="[0, 0.225]" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="[0.625, 0.5]" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="height" valType="str" updates="None" name="units"/>
        <Param val="1" valType="num" updates="None" name="volume"/>
      </MovieComponent>
      <ImageComponent name="new_neutral_2_jpg">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$filename_thisN_neutral" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="new_neutral_2_jpg" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="[0, 0.225]" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="512" valType="code" updates="constant" name="texture resolution"/>
        <Param val="height" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="response_training_2">
        <Param val="'left','right'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$CorrCat" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="response_training_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="Stimulus_2">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="Stimulus_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(int(stim_thisN))" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="left_disp_2">
        <Param val="grey" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="left_disp_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$left_cat" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="right_disp_2">
        <Param val="grey" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="right_disp_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$right_cat" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="feedback_2">
      <CodeComponent name="code_10">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="#Initialize color&amp;#10;feedback = ''&amp;#10;left_color = ''&amp;#10;right_color = ''" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#Feedback Zuweisung&amp;#10;# to make feedback probabilistic: uncomment nested if clause&amp;#10;# this will show happy for correct (congruent) in 80% of cases &amp;#10;# and angry for correct (incongruent) in 20% of cases&amp;#10;# probability can be changed by manipulating the sequence in p&amp;#10;&amp;#10;&amp;#10;#if correct show happy video (with 0.8 probability)&amp;#10;if (response_training.keys == 'left' and CorrCat == left_cat) or (response_training.keys == 'right' and CorrCat == right_cat):&amp;#10;#    if choice([True, False], p = [0.8, 0.2])&amp;#10;    time_h = 6.0&amp;#10;    time_a = 0.0&amp;#10;#    else:&amp;#10;#        time_h = 0.0&amp;#10;#        time_a = 6.0&amp;#10;&amp;#10;#if not correct show angry video (with 0.8 probability)&amp;#10;else:&amp;#10;#    if choice([True, False], p = [0.8, 0.2])&amp;#10;    time_h = 0.0&amp;#10;    time_a = 6.0&amp;#10;#    else:&amp;#10;#        time_h = 6.0&amp;#10;#        time_a = 0.0&amp;#10;&amp;#10;#Set color of A/B on screen after response&amp;#10;time_miss = 0&amp;#10;if response_training.keys == 'left':&amp;#10;    left_color = 'black'&amp;#10;    right_color = 'grey'&amp;#10;elif response_training.keys == 'right':&amp;#10;    left_color = 'grey'&amp;#10;    right_color = 'black'&amp;#10;elif response_training.keys == None:&amp;#10;    left_color = 'grey'&amp;#10;    right_color = 'grey'&amp;#10;    time_miss = 6&amp;#10;    time_a = 0&amp;#10;    time_h = 0&amp;#10;print(left_color, right_color)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_10" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="feedback_miss2_2">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="feedback_miss2_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.225)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="time_miss" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="BITTE RECHTZEITIG DRÜCKEN!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <MovieComponent name="new_angry_3">
        <Param val="True" valType="bool" updates="None" name="No audio"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="moviepy" valType="str" updates="None" name="backend"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="6" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="None" name="loop"/>
        <Param val="$filename_feedback_angry" valType="str" updates="set every repeat" name="movie"/>
        <Param val="new_angry_3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="[0, 0.225]" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="[0.625, 0.5]" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="time_a" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="height" valType="str" updates="None" name="units"/>
        <Param val="1" valType="num" updates="None" name="volume"/>
      </MovieComponent>
      <MovieComponent name="new_happy_3">
        <Param val="False" valType="bool" updates="None" name="No audio"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="moviepy" valType="str" updates="None" name="backend"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="6" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="None" name="loop"/>
        <Param val="$filename_feedback_happy" valType="str" updates="set every repeat" name="movie"/>
        <Param val="new_happy_3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="[0, 0.225]" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="[0.625, 0.5]" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="time_h" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="height" valType="str" updates="None" name="units"/>
        <Param val="1" valType="num" updates="None" name="volume"/>
      </MovieComponent>
      <TextComponent name="left_disp_fb_3">
        <Param val="$left_color" valType="str" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Lucida Console" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="left_disp_fb_3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$left_cat" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="right_disp_fb_3">
        <Param val="$right_color" valType="str" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Lucida Console" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="right_disp_fb_3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$right_cat" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="Stimulus_fb_3">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="Stimulus_fb_3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(int(Stim))" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="LatCounter">
      <CodeComponent name="code_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if(CycleCounter &lt; 5){&amp;#10;CycleCounter = CycleCounter + 1;&amp;#10;} else {&amp;#10;    if(CycleCounter == 5) {&amp;#10;        CycleCounter = 0;&amp;#10;        console.log(&quot;CycleCounter reset to:&quot; + CycleCounter)&amp;#10;    }&amp;#10;}" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="BlockCounter">
      <CodeComponent name="code_3">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if(BlockCounter &lt; 3){&amp;#10;BlockCounter = BlockCounter + 1;&amp;#10;} else {&amp;#10;    if(BlockCounter == 3) {&amp;#10;        BlockCounter = 0;&amp;#10;        console.log(&quot;BlockCounter reset to: &quot; + BlockCounter)&amp;#10;    }&amp;#10;}" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="feedback_prob">
      <CodeComponent name="code_12">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="function weighted_random(items, weights) {&amp;#10;    var i;&amp;#10;&amp;#10;    for (i = 0; i &lt; weights.length; i++)&amp;#10;        weights[i] += weights[i - 1] || 0;&amp;#10;    &amp;#10;    var random = Math.random() * weights[weights.length - 1];&amp;#10;    &amp;#10;    for (i = 0; i &lt; weights.length; i++)&amp;#10;        if (weights[i] &gt; random)&amp;#10;            break;&amp;#10;    &amp;#10;    return items[i];&amp;#10;}&amp;#10;&amp;#10;var prob_fb_counter = 0;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="#Initialize color&amp;#10;feedback = ''&amp;#10;left_color = ''&amp;#10;right_color = ''" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="feedback = &quot;&quot;;&amp;#10;left_color = &quot;&quot;;&amp;#10;right_color = &quot;&quot;;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="console.log(&quot;prob_fb_counter&quot;, prob_fb_counter)&amp;#10;&amp;#10;console.log(&quot;Response:&quot;, response_training.keys, &quot;CorrCat(Prob):&quot;, CorrCatProb, &quot;left_cat:&quot;, left_cat, &quot;right_cat&quot;, right_cat)&amp;#10;&amp;#10;&amp;#10;if ([0,1,2].includes(prob_fb_counter) &amp;&amp; left_cat == CorrCatProb) {&amp;#10;    prob_msg = &quot;Richtige Antwort!&quot;;&amp;#10;//    if(weighted_random([true, false], [0.8, 0.2])){&amp;#10;        //congruent&amp;#10;        console.log(&quot;Congruent image!&quot;)&amp;#10;        time_h = 6.0;&amp;#10;        time_a = 0.0;&amp;#10;//    } else {&amp;#10;        //incongruent&amp;#10;//        console.log(&quot;Incongruent image!&quot;)&amp;#10;//        time_h = 0.0;&amp;#10;//        time_a = 6.0;&amp;#10;//    }&amp;#10;} else {&amp;#10;    if ([0,1,2].includes(prob_fb_counter) &amp;&amp; right_cat == CorrCatProb) {&amp;#10;    prob_msg = &quot;Falsche Antwort!&quot;;&amp;#10;//    if(weighted_random([true, false], [0.8, 0.2])){&amp;#10;//        //congruent&amp;#10;        console.log(&quot;Congruent image!&quot;)&amp;#10;        time_h = 0.0;&amp;#10;        time_a = 6.0;&amp;#10;//    } else {&amp;#10;        //incongruent&amp;#10;//        console.log(&quot;Incongruent image!&quot;)&amp;#10;//        time_h = 6.0;&amp;#10;//        time_a = 0.0;&amp;#10;    }     &amp;#10;}&amp;#10;if (prob_fb_counter == 3){&amp;#10;        prob_msg = &quot;Richtige Antwort!&quot;;&amp;#10;        console.log(&quot;Incongruent image!&quot;)&amp;#10;        time_h = 0.0;&amp;#10;        time_a = 6.0;&amp;#10;}&amp;#10;&amp;#10;&amp;#10;time_miss = 0;&amp;#10;if ((response_training.keys == &quot;left&quot;)) {&amp;#10;    left_color = &quot;white&quot;;&amp;#10;    right_color = &quot;grey&quot;;&amp;#10;} else {&amp;#10;    if ((response_training.keys == &quot;right&quot;)) {&amp;#10;        left_color = &quot;grey&quot;;&amp;#10;        right_color = &quot;white&quot;;&amp;#10;    } else {&amp;#10;        if ((response_training.keys == null)) {&amp;#10;            left_color = &quot;grey&quot;;&amp;#10;            right_color = &quot;grey&quot;;&amp;#10;            time_miss = 6;&amp;#10;            time_a = 0;&amp;#10;            time_h = 0;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#Feedback Zuweisung&amp;#10;# to make feedback probabilistic: uncomment nested if clause&amp;#10;# this will show happy for correct (congruent) in 80% of cases &amp;#10;# and angry for correct (incongruent) in 20% of cases&amp;#10;# probability can be changed by manipulating the sequence in p&amp;#10;&amp;#10;&amp;#10;#if correct show happy video (with 0.8 probability)&amp;#10;if (response_training.keys == 'left' and CorrCat == left_cat) or (response_training.keys == 'right' and CorrCat == right_cat):&amp;#10;    prob_msg = &quot;Richtige Antwort!&quot;&amp;#10;    if choice([True, False], p = [0.8, 0.2]):&amp;#10;        time_h = 6.0&amp;#10;        time_a = 0.0&amp;#10;    else:&amp;#10;        time_h = 0.0&amp;#10;        time_a = 6.0&amp;#10;&amp;#10;#if not correct show angry video (with 0.8 probability)&amp;#10;else:&amp;#10;    prob_msg = &quot;Falsche Antwort!&quot;&amp;#10;    if choice([True, False], p = [0.8, 0.2]):&amp;#10;        time_h = 0.0&amp;#10;        time_a = 6.0&amp;#10;    else:&amp;#10;        time_h = 6.0&amp;#10;        time_a = 0.0&amp;#10;&amp;#10;#Set color of A/B on screen after response&amp;#10;time_miss = 0&amp;#10;if response_training.keys == 'left':&amp;#10;    left_color = 'black'&amp;#10;    right_color = 'grey'&amp;#10;elif response_training.keys == 'right':&amp;#10;    left_color = 'grey'&amp;#10;    right_color = 'black'&amp;#10;elif response_training.keys == None:&amp;#10;    left_color = 'grey'&amp;#10;    right_color = 'grey'&amp;#10;    time_miss = 6&amp;#10;    time_a = 0&amp;#10;    time_h = 0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="thisExp.addData(&quot;CorrCat&quot;, CorrCat);&amp;#10;prob_fb_counter = prob_fb_counter + 1;&amp;#10;&amp;#10;if ((((response_training.keys == &quot;left&quot;) &amp;&amp; (CorrCatProb == left_cat)) || ((response_training.keys == &quot;right&quot;) &amp;&amp; (CorrCatProb == right_cat)))) {&amp;#10;    thisExp.addData(&quot;CorrectAns&quot;, &quot;Yes&quot;);&amp;#10;    console.log(&quot;Correct Answer!&quot;);&amp;#10;} else {&amp;#10;    thisExp.addData(&quot;CorrectAns&quot;, &quot;No&quot;);&amp;#10;    console.log(&quot;Wrong Answer!&quot;);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if (response_training.keys == 'left' and CorrCat == left_cat) or (response_training_2.keys == 'right' and CorrDict[stim_thisN] == right_cat):&amp;#10;    thisExp.addData ('CorrectAns', &quot;Yes&quot;)&amp;#10;    print(&quot;Correct Answer!&quot;)&amp;#10;else:&amp;#10;    thisExp.addData ('CorrectAns', &quot;No&quot;)&amp;#10;    print(&quot;Wrong Answer!&quot;)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_12" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="feedback_miss2_3">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="feedback_miss2_3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.225)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="time_miss" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="PLEASE RESPOND FASTER!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <MovieComponent name="new_angry_4">
        <Param val="True" valType="bool" updates="None" name="No audio"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="moviepy" valType="str" updates="None" name="backend"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="6" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="None" name="loop"/>
        <Param val="$filename_feedback_angry" valType="str" updates="set every repeat" name="movie"/>
        <Param val="new_angry_4" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="[0, 0.225]" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="[0.5, 0.5]" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="time_a" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="height" valType="str" updates="None" name="units"/>
        <Param val="1" valType="num" updates="None" name="volume"/>
      </MovieComponent>
      <MovieComponent name="new_happy_4">
        <Param val="False" valType="bool" updates="None" name="No audio"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="moviepy" valType="str" updates="None" name="backend"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="6" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="None" name="loop"/>
        <Param val="$filename_feedback_happy" valType="str" updates="set every repeat" name="movie"/>
        <Param val="new_happy_4" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="[0, 0.225]" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="[0.5, 0.5]" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="time_h" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="height" valType="str" updates="None" name="units"/>
        <Param val="1" valType="num" updates="None" name="volume"/>
      </MovieComponent>
      <TextComponent name="left_disp_fb_4">
        <Param val="$left_color" valType="str" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="left_disp_fb_4" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$left_cat" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="right_disp_fb_4">
        <Param val="$right_color" valType="str" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="right_disp_fb_4" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$right_cat" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="Stimulus_fb_4">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="Stimulus_fb_4" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(int(Stim))" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="Prob_feedback">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="Prob_feedback" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -0.25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$prob_msg" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="Prob_Intro">
      <CodeComponent name="code_11">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="prob_msg = centerfy(&quot;Leider ist es so, dass &quot;) " valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="prob_msg = centerfy(&quot;Leider ist es so, dass &quot;);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_11" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Alles_Klar_3">
      <CodeComponent name="Allesklarcode_4">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="Allesklar = centerfy('Beim letzten Durchgang haben Bild und Text nicht übereingestimmt!\n Dies wird im richtigen Experiment aber nur selten passieren.\n\n'&amp;#10;'Den Text unten werden Sie im Folgenden nicht mehr angezeigt bekommen.\n\n'&amp;#10;'Versuchen Sie einfach, so gut es geht, die richtige Antwort zu geben!\n')" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Allesklarcode_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="Allesklartext">
        <Param val="$color_choice" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$font_choice" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="code" updates="constant" name="letterHeight"/>
        <Param val="Allesklartext" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Did you notice? In the last pass, the picture and text didn't match!&amp;#10;&amp;#10;But this will rarely happen in the real experiment.&amp;#10;&amp;#10;You won't see the text below in the following.&amp;#10;&amp;#10;Just try to give the right answer as best you can!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="70" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="Allesklar_resp">
        <Param val="" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Allesklar_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="Welcome"/>
    <Routine name="instr_train_s"/>
    <LoopInitiator loopType="TrialHandler" name="training_social">
      <Param name="Selected rows" updates="None" val="0:4" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('Stim', 99.0), ('filename_neutral', 'ADFES/Freigestellt/Neutral/F04-Neutral-Face Forward_freigestellt.mp4'), ('filename_feedback_happy', 'ADFES/Freigestellt/Joy/Used/F04-Joy-Face Forward_freigestellt.mp4'), ('filename_feedback_angry', 'ADFES/Freigestellt/Anger/F04-Anger-Face Forward_freigestellt.mp4'), ('CorrCatTrain', 'A')]), OrderedDict([('Stim', 38.0), ('filename_neutral', 'ADFES/Freigestellt/Neutral/M02-Neutral-Face Forward_freigestellt.mp4'), ('filename_feedback_happy', 'ADFES/Freigestellt/Joy/Used/M02-Joy-Face Forward_freigestellt.mp4'), ('filename_feedback_angry', 'ADFES/Freigestellt/Anger/M02-Anger-Face Forward_freigestellt.mp4'), ('CorrCatTrain', 'A')]), OrderedDict([('Stim', 91.0), ('filename_neutral', 'ADFES/Freigestellt/Neutral/F01-Neutral-Face Forward_freigestellt.mp4'), ('filename_feedback_happy', 'ADFES/Freigestellt/Joy/Used/F01-Joy-Face Forward_freigestellt.mp4'), ('filename_feedback_angry', 'ADFES/Freigestellt/Anger/F01-Anger-Face Forward_freigestellt.mp4'), ('CorrCatTrain', 'B')]), OrderedDict([('Stim', 38.0), ('filename_neutral', 'ADFES/Freigestellt/Neutral/M06-Neutral-Face Forward_freigestellt.mp4'), ('filename_feedback_happy', 'ADFES/Freigestellt/Joy/Used/M06-Joy-Face Forward_freigestellt.mp4'), ('filename_feedback_angry', 'ADFES/Freigestellt/Anger/M06-Anger-Face Forward_freigestellt.mp4'), ('CorrCatTrain', 'B')]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="trainingtrials_social.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="training_social" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial"/>
    <Routine name="feedback_train"/>
    <LoopTerminator name="training_social"/>
    <Routine name="Alles_klar"/>
    <Routine name="instr_train_ns"/>
    <LoopInitiator loopType="TrialHandler" name="training_nonsocial">
      <Param name="Selected rows" updates="None" val="0:4" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('Stim', 98.0), ('filename_neutral', 'Mandalas_new/neutral/Mandala3_neutral.mp4'), ('filename_feedback_happy', 'Mandalas_new/happy/Mandala3_happy.mp4'), ('filename_feedback_angry', 'Mandalas_new/angry/Mandala3_angry.mp4'), ('CorrCatTrain', 'B')]), OrderedDict([('Stim', 53.0), ('filename_neutral', 'Mandalas_new/neutral/Mandala2_neutral.mp4'), ('filename_feedback_happy', 'Mandalas_new/happy/Mandala2_happy.mp4'), ('filename_feedback_angry', 'Mandalas_new/angry/Mandala2_angry.mp4'), ('CorrCatTrain', 'A')]), OrderedDict([('Stim', 43.0), ('filename_neutral', 'Mandalas_new/neutral/Mandala4_neutral.mp4'), ('filename_feedback_happy', 'Mandalas_new/happy/Mandala4_happy.mp4'), ('filename_feedback_angry', 'Mandalas_new/angry/Mandala4_angry.mp4'), ('CorrCatTrain', 'A')]), OrderedDict([('Stim', 39.0), ('filename_neutral', 'Mandalas_new/neutral/Mandala1_neutral.mp4'), ('filename_feedback_happy', 'Mandalas_new/happy/Mandala1_happy.mp4'), ('filename_feedback_angry', 'Mandalas_new/angry/Mandala1_angry.mp4'), ('CorrCatTrain', 'B')]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCatTrain', None)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="trainingtrials_nonsocial.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="training_nonsocial" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial"/>
    <Routine name="feedback_train"/>
    <LoopTerminator name="training_nonsocial"/>
    <Routine name="Alles_Klar_2"/>
    <LoopInitiator loopType="TrialHandler" name="prob_fb">
      <Param name="Selected rows" updates="None" val="0:4" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('Stim', 99.0), ('filename_neutral', 'ADFES/Freigestellt/Neutral/F04-Neutral-Face Forward_freigestellt.mp4'), ('filename_feedback_happy', 'ADFES/Freigestellt/Joy/Used/F04-Joy-Face Forward_freigestellt.mp4'), ('filename_feedback_angry', 'ADFES/Freigestellt/Anger/F04-Anger-Face Forward_freigestellt.mp4'), ('CorrCat', 'A')]), OrderedDict([('Stim', 38.0), ('filename_neutral', 'ADFES/Freigestellt/Neutral/M02-Neutral-Face Forward_freigestellt.mp4'), ('filename_feedback_happy', 'ADFES/Freigestellt/Joy/Used/M02-Joy-Face Forward_freigestellt.mp4'), ('filename_feedback_angry', 'ADFES/Freigestellt/Anger/M02-Anger-Face Forward_freigestellt.mp4'), ('CorrCat', 'A')]), OrderedDict([('Stim', 91.0), ('filename_neutral', 'ADFES/Freigestellt/Neutral/F01-Neutral-Face Forward_freigestellt.mp4'), ('filename_feedback_happy', 'ADFES/Freigestellt/Joy/Used/F01-Joy-Face Forward_freigestellt.mp4'), ('filename_feedback_angry', 'ADFES/Freigestellt/Anger/F01-Anger-Face Forward_freigestellt.mp4'), ('CorrCat', 'B')]), OrderedDict([('Stim', 38.0), ('filename_neutral', 'ADFES/Freigestellt/Neutral/M06-Neutral-Face Forward_freigestellt.mp4'), ('filename_feedback_happy', 'ADFES/Freigestellt/Joy/Used/M06-Joy-Face Forward_freigestellt.mp4'), ('filename_feedback_angry', 'ADFES/Freigestellt/Anger/M06-Anger-Face Forward_freigestellt.mp4'), ('CorrCat', 'B')]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCat', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCat', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCat', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCat', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCat', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCat', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCat', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCat', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCat', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCat', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCat', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCat', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCat', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCat', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCat', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCat', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCat', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCat', None)]), OrderedDict([('Stim', None), ('filename_neutral', None), ('filename_feedback_happy', None), ('filename_feedback_angry', None), ('CorrCat', None)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="trainingtrials_social_prob.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="prob_fb" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial"/>
    <Routine name="feedback_prob"/>
    <LoopTerminator name="prob_fb"/>
    <Routine name="Alles_Klar_3"/>
    <LoopInitiator loopType="TrialHandler" name="blocks">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="4" valType="code"/>
      <Param name="name" updates="None" val="blocks" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="BlockCode"/>
    <LoopInitiator loopType="TrialHandler" name="cycles">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="6" valType="code"/>
      <Param name="name" updates="None" val="cycles" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="LateralizationByCycle"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="4" valType="code"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial_2"/>
    <Routine name="feedback"/>
    <Routine name="Intertrial_Interval"/>
    <LoopTerminator name="trials"/>
    <Routine name="LatCounter"/>
    <LoopTerminator name="cycles"/>
    <Routine name="BlockCounter"/>
    <LoopTerminator name="blocks"/>
    <Routine name="Thanks"/>
  </Flow>
</PsychoPy2experiment>
